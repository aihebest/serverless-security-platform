# .github/workflows/security-scan.yml
name: Security Scanning Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security_scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Debug directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "\nDirectory contents:"
          ls -la
          echo "\nFull directory tree:"
          tree || (apt-get update && apt-get install -y tree && tree)

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pytest==7.4.3 \
                      pytest-asyncio==0.21.1 \
                      pytest-cov==4.1.0 \
                      python-dateutil==2.8.2 \
                      pyyaml==6.0.1 \
                      azure-identity==1.15.0 \
                      azure-mgmt-resource==23.0.1 \
                      azure-cosmos==4.5.1 \
                      azure-storage-blob==12.19.0 \
                      azure-servicebus==7.11.3 \
                      azure-functions==1.17.0 \
                      requests==2.31.0 \
                      aiohttp==3.9.1 \
                      ratelimit==2.2.1

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Security Scan
        env:
          COSMOS_DB_CONNECTION_STRING: ${{ secrets.COSMOS_DB_CONNECTION_STRING }}
          COSMOS_DB_DATABASE_NAME: ${{ secrets.COSMOS_DB_DATABASE_NAME }}
          COSMOS_DB_CONTAINER_NAME: ${{ secrets.COSMOS_DB_CONTAINER_NAME }}
        run: |
          echo "Python version:"
          python --version
          
          echo "\nInstalled packages:"
          pip list
          
          echo "\nRunning security scan..."
          python -c "
          import asyncio
          import json
          import os
          from src.scanners.scanning_service import ScanningService
          
          async def run_scan():
              scanner = ScanningService()
              results = await scanner.run_scan()
              
              with open('scan_results.json', 'w') as f:
                  json.dump(results, f, indent=2)
              
              return results
          
          results = asyncio.run(run_scan())
          print('Scan results:', json.dumps(results, indent=2))
          
          if results.get('status') == 'failed':
              print('Scan failed:', results.get('error'))
              exit(1)
          "

      - name: Upload scan results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: scan_results.json

  notify:
    needs: security_scan
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check scan status
        run: |
          if [ "${{ needs.security_scan.result }}" == "success" ]; then
            echo "✅ Security scan completed successfully"
          else
            echo "❌ Security scan failed"
            exit 1
          fi