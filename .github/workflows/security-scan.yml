# .github/workflows/security-scan.yml
name: Security Scanning Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily scheduled scan
  workflow_dispatch:

jobs:
  security_scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pytest==7.4.3 \
                      pytest-asyncio==0.21.1 \
                      pytest-cov==4.1.0 \
                      python-dateutil==2.8.2 \
                      pyyaml==6.0.1 \
                      azure-identity==1.15.0 \
                      azure-mgmt-resource==23.0.1 \
                      azure-cosmos==4.5.1 \
                      azure-storage-blob==12.19.0 \
                      azure-servicebus==7.11.3 \
                      azure-functions==1.17.0 \
                      requests==2.31.0 \
                      aiohttp==3.9.1 \
                      ratelimit==2.2.1 \
                      bandit==1.7.5 \
                      safety==2.3.5

      - name: SAST Scan
        continue-on-error: true
        run: |
          echo "Running SAST scan with Bandit..."
          bandit -r ./src -f json -o bandit-results.json || true
          if [ -f bandit-results.json ]; then
            echo "SAST scan completed and results saved"
            # Check if there are any high severity issues
            if [ $(jq '.metrics.high' bandit-results.json) -gt 0 ]; then
              echo "⚠️ High severity issues found in SAST scan"
              jq '.results[] | select(.issue_severity=="HIGH")' bandit-results.json
            else
              echo "✅ No high severity issues found in SAST scan"
            fi
          else
            echo "⚠️ Failed to generate SAST results"
          fi

      - name: Dependencies Security Check
        continue-on-error: true
        run: |
          echo "Checking dependencies for security issues..."
          safety check -r requirements.txt --json > safety-results.json || true
          if [ -f safety-results.json ]; then
            echo "Dependencies check completed"
            # Process safety check results
            jq -r '.[] | "⚠️ " + .package + ": " + .advisory' safety-results.json || echo "No issues found"
          fi

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Infrastructure Security Scan
        run: |
          echo "Running infrastructure security checks..."
          python scripts/test_scanner.py --mode=infrastructure || true

      - name: Run Application Security Scan
        env:
          COSMOS_DB_CONNECTION_STRING: ${{ secrets.COSMOS_DB_CONNECTION_STRING }}
          COSMOS_DB_DATABASE_NAME: ${{ secrets.COSMOS_DB_DATABASE_NAME }}
          COSMOS_DB_CONTAINER_NAME: ${{ secrets.COSMOS_DB_CONTAINER_NAME }}
        run: |
          echo "Running application security scan..."
          python scripts/test_scanner.py --mode=application || true

      - name: Generate Security Report
        run: |
          {
            echo "## Security Scan Summary"
            echo "### SAST Scan Results"
            if [ -f bandit-results.json ]; then
              echo "- High: $(jq '.metrics.high' bandit-results.json)"
              echo "- Medium: $(jq '.metrics.medium' bandit-results.json)"
              echo "- Low: $(jq '.metrics.low' bandit-results.json)"
            fi
            
            echo "### Dependency Check Results"
            if [ -f safety-results.json ]; then
              echo "$(jq length safety-results.json) issues found"
            fi
            
            echo "### Infrastructure Scan Status"
            if [ -f infrastructure-scan.json ]; then
              echo "✅ Completed"
            fi
            
            echo "### Application Scan Status"
            if [ -f application-scan.json ]; then
              echo "✅ Completed"
            fi
          } >> $GITHUB_STEP_SUMMARY

      - name: Upload scan results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            *-results.json
            *-scan.json

  notify:
    needs: security_scan
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Process Results
        run: |
          if [ "${{ needs.security_scan.result }}" == "success" ]; then
            echo "✅ Security scans completed successfully"
          else
            echo "⚠️ Some security checks need attention"
          fi