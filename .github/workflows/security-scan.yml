# .github/workflows/security-scan.yml
name: Security Scanning Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily scheduled scan
  workflow_dispatch:

jobs:
  security_scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pytest==7.4.3 \
                      pytest-asyncio==0.21.1 \
                      pytest-cov==4.1.0 \
                      python-dateutil==2.8.2 \
                      pyyaml==6.0.1 \
                      azure-identity==1.15.0 \
                      azure-mgmt-resource==23.0.1 \
                      azure-cosmos==4.5.1 \
                      azure-storage-blob==12.19.0 \
                      azure-servicebus==7.11.3 \
                      azure-functions==1.17.0 \
                      requests==2.31.0 \
                      aiohttp==3.9.1 \
                      ratelimit==2.2.1 \
                      bandit==1.7.5 \
                      safety==2.3.5

      - name: SAST Scan
        run: |
          bandit -r ./src -f json -o bandit-results.json
          echo "Static Analysis Security Testing completed"

      - name: Dependencies Security Check
        run: |
          safety check -r requirements.txt --json > safety-results.json
          echo "Dependencies security check completed"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Infrastructure Security Scan
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          python scripts/test_scanner.py --mode infrastructure

      - name: Run Comprehensive Security Scan
        env:
          COSMOS_DB_CONNECTION_STRING: ${{ secrets.COSMOS_DB_CONNECTION_STRING }}
          COSMOS_DB_DATABASE_NAME: ${{ secrets.COSMOS_DB_DATABASE_NAME }}
          COSMOS_DB_CONTAINER_NAME: ${{ secrets.COSMOS_DB_CONTAINER_NAME }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          echo "Running security scan..."
          python scripts/test_scanner.py --mode full
          
      - name: Upload scan results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            scan_results.json
            bandit-results.json
            safety-results.json
            infrastructure-scan.json

      - name: Process and Store Results
        if: success()
        run: |
          python scripts/verify_dashboard.py --update-security-metrics

  notify:
    needs: security_scan
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check scan status
        run: |
          if [ "${{ needs.security_scan.result }}" == "success" ]; then
            echo "✅ Security scan completed successfully"
          else
            echo "❌ Security scan failed"
            exit 1
          fi

      - name: Generate Security Report
        if: success()
        run: |
          echo "Security Scan Report - $(date)" >> $GITHUB_STEP_SUMMARY
          echo "Status: ${{ needs.security_scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY