# .github/workflows/security-scan.yml
name: Security Scanning Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  security_scan:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Security Scan
        env:
          COSMOS_DB_CONNECTION_STRING: ${{ secrets.COSMOS_DB_CONNECTION_STRING }}
          COSMOS_DB_DATABASE_NAME: ${{ secrets.COSMOS_DB_DATABASE_NAME }}
          COSMOS_DB_CONTAINER_NAME: ${{ secrets.COSMOS_DB_CONTAINER_NAME }}
        run: |
          python -c "
          import asyncio
          import json
          from src.scanners.scanning_service import ScanningService
          
          async def run_scan():
              scanner = ScanningService()
              results = await scanner.run_scan()
              print('Scan Results:', json.dumps(results, indent=2))
              return results
          
          results = asyncio.run(run_scan())
          
          if results.get('status') == 'failed':
              print('Scan failed:', results.get('error'))
              exit(1)
          "

      - name: Upload Scan Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            scan_report.json
            *.log